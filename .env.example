# =============================================================================
# ENVIRONMENT CONFIGURATION TEMPLATE
# =============================================================================
# IMPORTANT: This is a template file. Copy to .env and update with real values.
# WARNING: Never commit .env files with real secrets to version control!
# File Permissions: Set to 600 (owner read/write only) for security
# =============================================================================

# Application Configuration
NODE_ENV=production
PORT=3000
APP_NAME="Real Estate CRM"
APP_URL=https://your-domain.com
APP_VERSION=1.0.0

# Security Configuration
# WARNING: Generate strong, unique secrets for production!
APP_SECRET=your-app-secret-key-here-change-this
JWT_SECRET=your-jwt-secret-key-here-change-this
SESSION_SECRET=your-session-secret-key-here-change-this
ENCRYPTION_KEY=your-encryption-key-here-change-this

# Database Configuration
# WARNING: Use strong passwords and restrict database access!
DB_CONNECTION=mysql
DB_HOST=localhost
DB_PORT=3306
DB_DATABASE=real_estate_crm
DB_USERNAME=crm_user
DB_PASSWORD=secure-database-password-here

# Redis Configuration (for caching and sessions)
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=secure-redis-password-here
REDIS_DB=0

# Email Configuration
# WARNING: Use environment-specific SMTP credentials
MAIL_DRIVER=smtp
MAIL_HOST=smtp.gmail.com
MAIL_PORT=587
MAIL_USERNAME=your-email@domain.com
MAIL_PASSWORD=your-email-app-password
MAIL_ENCRYPTION=tls
MAIL_FROM_ADDRESS=noreply@your-domain.com
MAIL_FROM_NAME="Real Estate CRM"

# File Upload Configuration
# NOTE: Ensure upload directory has proper permissions (755)
UPLOAD_PATH=./uploads
MAX_FILE_SIZE=10485760
ALLOWED_FILE_TYPES=jpg,jpeg,png,pdf,doc,docx

# Real Estate API Integration
# WARNING: Keep API keys secure and rotate regularly
MLS_API_KEY=your-mls-api-key-here
ZILLOW_API_KEY=your-zillow-api-key-here
REALTOR_API_KEY=your-realtor-api-key-here

# Google Services
GOOGLE_MAPS_API_KEY=your-google-maps-api-key
GOOGLE_CLIENT_ID=your-google-oauth-client-id
GOOGLE_CLIENT_SECRET=your-google-oauth-client-secret

# Payment Processing
# WARNING: Use sandbox keys for development, production keys for live
STRIPE_PUBLIC_KEY=pk_test_your-stripe-public-key
STRIPE_SECRET_KEY=sk_test_your-stripe-secret-key
STRIPE_WEBHOOK_SECRET=whsec_your-webhook-secret

# Logging Configuration
LOG_LEVEL=info
LOG_FILE=./logs/app.log
ERROR_LOG_FILE=./logs/error.log

# Performance & Monitoring
# NOTE: Configure monitoring for production health checks
MONITORING_ENABLED=true
HEALTH_CHECK_ENDPOINT=/health
METRICS_ENDPOINT=/metrics

# Backup Configuration
# NOTE: Ensure backup directory has proper permissions and space
BACKUP_ENABLED=true
BACKUP_PATH=./backups
BACKUP_RETENTION_DAYS=30

# Rate Limiting
RATE_LIMIT_ENABLED=true
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=100

# CORS Configuration
# WARNING: Configure CORS properly for production security
CORS_ENABLED=true
CORS_ORIGIN=https://your-frontend-domain.com

# Development Settings (remove in production)
DEBUG=false
MOCK_EXTERNAL_APIS=false

# =============================================================================
# DEPLOYMENT NOTES:
# 1. Copy this file to .env and update all placeholder values
# 2. Set file permissions: chmod 600 .env
# 3. Never commit .env to version control - add to .gitignore
# 4. Use different values for development, staging, and production
# 5. Regularly rotate secrets and API keys
# 6. Monitor for exposed credentials in logs
# 7. Use environment-specific configuration management tools
# =============================================================================